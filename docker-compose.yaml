version: '3'
services:
  traefik:
    image: ${TRAEFIK_IMAGE}
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:${TRAEFIK_HTTP_PORT}"
      - "--entrypoints.websecure.address=:${TRAEFIK_HTTPS_PORT}"
      - "--entrypoints.websecure.forwardedheaders.trustedips=0.0.0.0/0"
    ports:
      - "${TRAEFIK_HTTP_PORT}:${TRAEFIK_HTTP_PORT}"
      - "${TRAEFIK_HTTPS_PORT}:${TRAEFIK_HTTPS_PORT}"
      - "${TRAEFIK_API_PORT}:${TRAEFIK_API_PORT}"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - ${NETWORK_NAME}

  rocketchat:
    image: ${ROCKETCHAT_IMAGE}
    environment:
      - MONGO_URL=mongodb://mongo:${MONGO_PORT}/rocketchat
      - MONGO_OPLOG_URL=mongodb://mongo:${MONGO_PORT}/local
      - ROOT_URL=http://${ROOT_URL}
      - PORT=${ROCKETCHAT_PORT}
      - OVERWRITE_SETTING_Accounts_RegistrationForm=Disabled
      - OVERWRITE_SETTING_Log_Level=2
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rocketchat.rule=Host(`${ROOT_URL}`)"
      - "traefik.http.services.rocketchat.loadbalancer.server.port=${ROCKETCHAT_PORT}"
    networks:
      - ${NETWORK_NAME}
    deploy:
      replicas: ${ROCKET_REPLICAS}
    depends_on:
      - mongo

  mongo:
    image: ${MONGO_IMAGE}
    volumes:
      - mongo-data:/data/db
    networks:
      - ${NETWORK_NAME}

  mongo-init-replica:
    image: ${MONGO_IMAGE}
    command: "mongo --eval 'rs.initiate({_id: \"rs0\", members: [{_id: 0, host: \"localhost:${MONGO_PORT}\"}]})'"
    depends_on:
      - mongo
    networks:
      - ${NETWORK_NAME}

networks:
  ${NETWORK_NAME}:
    driver: bridge

volumes:
  mongo-data: